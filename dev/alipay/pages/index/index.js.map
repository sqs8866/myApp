{"version":3,"file":"pages/index/index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://myApp/./src/pages/index/index.tsx","webpack://myApp/./src/pages/index/MapController/index.tsx","webpack://myApp/./src/pages/index/index.tsx?743a"],"sourcesContent":["import React, { Component } from 'react'\nimport locationUtil from '@utils/locationUtil'\nimport MapController from './MapController'\nimport './index.scss'\n\nexport default class Index extends Component<{}, any>{\n  mapControllerRef: React.RefObject<MapController> = React.createRef();\n  constructor(props) {\n    super(props);\n    this.state = {\n    }\n  }\n  async componentDidMount() {\n    await this.getNowLocation();\n  }\n  async getNowLocation() {\n    let position = await locationUtil.getCurrentPosition();\n    console.log('zzzzzz',position)\n    if (this.mapControllerRef.current) {\n      this.mapControllerRef.current.startAddressChanged(position)\n    }\n  }\n  render() {\n    return (\n      <MapController ref={this.mapControllerRef} />\n    )\n  }\n}\n","import Taro from '@tarojs/taro'\r\nimport { Component } from 'react'\r\nimport { Map, Image, View } from '@tarojs/components'\r\nimport store from '@store/index'\r\nimport { updateGlobalData } from '@store/reducers'\r\n\r\nexport default class MapController extends Component<any, any>{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mapInfo: {\r\n                latitude: 39.908823,\r\n                longitude: 116.39747,\r\n            },\r\n            calloutAddress: '正在获取您的位置...',\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        //从选择地址页面选择了出发地\r\n        Taro.eventCenter.on('selectStartAddress', this.startAddressChanged.bind(this))\r\n    }\r\n\r\n    // eslint-disable-next-line react/sort-comp\r\n    async startAddressChanged(pos: { loc: any; cityId?: any }) {\r\n        if (pos && pos.loc) {\r\n            const { loc, cityId } = pos;\r\n            this.setState({\r\n                mapInfo: loc,\r\n                calloutAddress: loc.name\r\n            })\r\n            const startAddress = { ...loc, cityId }\r\n            await store.dispatch(updateGlobalData({ startAddress }))\r\n        }\r\n    }\r\n\r\n    skipStartAddress() {\r\n        let url = '/pages/address/index?locTip=start'\r\n        Taro.navigateTo({ url })\r\n    }\r\n    render() {\r\n        const { mapInfo, calloutAddress } = this.state\r\n        return (\r\n            <>\r\n                <Map\r\n                    id=\"map\"\r\n                    style={{ width: '100%', height: '100vh' }}\r\n                    scale={14}\r\n                    latitude={mapInfo.latitude}\r\n                    longitude={mapInfo.longitude}\r\n                    showLocation\r\n                />\r\n                {/*地图中间定位icon*/}\r\n                <View className=\"index-icon-center\">\r\n                    <Image className=\"index-icon-img\" src={require('../../../res/center-location.png')}></Image>\r\n                </View>\r\n                {/*气泡 */}\r\n                <View className=\"index-callout\" onClick={this.skipStartAddress.bind(this)}>\r\n                    <View className=\"index-callout-center\">{calloutAddress}</View>\r\n                    <Image className=\"index-arrow-right\" src={require('../../../res/map-arrow2.png')}></Image>\r\n                    <View className=\"index-arrow-down\"></View>\r\n                </View>\r\n            </>\r\n        )\r\n    }\r\n}","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./index.tsx\"\nvar config = {\"navigationBarTitleText\":\"首页\"};\n\n\nvar inst = Page(createPageConfig(component, 'pages/index/index', {root:{cn:[]}}, config || {}))\n\n\nexport default component\n"],"names":[],"sourceRoot":""}