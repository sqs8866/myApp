{"version":3,"file":"taro.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACRA;ACQA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpgmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AChDA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA","sources":["webpack://myApp/../src/components-react.ts","webpack://myApp/../src/apis-list.ts","webpack://myApp/../src/apis.ts","webpack://myApp/../src/components.ts","webpack://myApp/../src/runtime-utils.ts","webpack://myApp/../src/runtime.ts","webpack://myApp/../../src/template/custom-wrapper.ts"],"sourcesContent":["// For React.createElement's type\nexport * from '@tarojs/components/mini'\nexport const Lottie = 'lottie'\nexport const Lifestyle = 'lifestyle'\nexport const LifeFollow = 'life-follow'\nexport const ContactButton = 'contact-button'\nexport const ArCamera = 'ar-camera'\nexport const PageContainer = 'page-container'\nexport const ShareElement = 'share-element'\n","export const needPromiseApis = new Set([\n  'addCardAuth',\n  'getOpenUserInfo',\n  'chooseAlipayContact',\n  'chooseCity',\n  'chooseContact',\n  'choosePhoneContact',\n  'datePicker',\n  'getAddress',\n  'getAuthCode',\n  'getPhoneNumber',\n  'getRunData',\n  'getRunScene',\n  'getServerTime',\n  'getTitleColor',\n  'rsa',\n  'paySignCenter',\n  'tradePay',\n  'isCollected',\n  'multiLevelSelect',\n  'onLocatedComplete',\n  'optionsSelect',\n  'prompt',\n  'regionPicker',\n  'setLocatedCity',\n  'showAuthGuide',\n  'textRiskIdentification',\n  'vibrate',\n  'watchShake',\n  'connectBLEDevice',\n  'disconnectBLEDevice',\n  'makeBluetoothPair',\n  'writeBLECharacteristicValue',\n  'readBLECharacteristicValue',\n  'notifyBLECharacteristicValueChange',\n  'getBLEDeviceServices',\n  'getBLEDeviceCharacteristics',\n  'openBluetoothAdapter',\n  'closeBluetoothAdapter',\n  'getBluetoothAdapterState',\n  'startBluetoothDevicesDiscovery',\n  'stopBluetoothDevicesDiscovery',\n  'getBluetoothDevices',\n  'getConnectedBluetoothDevices'\n])\n","import { processApis } from '@tarojs/shared'\n\nimport { needPromiseApis } from './apis-list'\n\nimport type { IApiDiff } from '@tarojs/shared'\n\ndeclare const my: any\n\nconst apiDiff: IApiDiff = {\n  login: {\n    alias: 'getAuthCode',\n    options: {\n      set: [\n        {\n          key: 'scopes',\n          value: 'auth_base'\n        }\n      ]\n    }\n  },\n\n  showActionSheet: {\n    options: {\n      change: [{\n        old: 'itemList',\n        new: 'items'\n      }]\n    }\n  },\n  showToast: {\n    options: {\n      change: [{\n        old: 'title',\n        new: 'content'\n      }, {\n        old: 'icon',\n        new: 'type'\n      }],\n      set: [{\n        key: 'type',\n        value (options) {\n          if (options.type === 'error') {\n            return 'fail'\n          }\n          return options.type\n        }\n      }]\n    }\n  },\n  showLoading: {\n    options: {\n      change: [{\n        old: 'title',\n        new: 'content'\n      }]\n    }\n  },\n  setNavigationBarTitle: {\n    alias: 'setNavigationBar'\n  },\n  setNavigationBarColor: {\n    alias: 'setNavigationBar'\n  },\n  saveImageToPhotosAlbum: {\n    alias: 'saveImage',\n    options: {\n      change: [{\n        old: 'filePath',\n        new: 'url'\n      }]\n    }\n  },\n  previewImage: {\n    options: {\n      set: [{\n        key: 'current',\n        value (options) {\n          return options.urls.indexOf(options.current || options.urls[0])\n        }\n      }]\n    }\n  },\n  getFileInfo: {\n    options: {\n      change: [{\n        old: 'filePath',\n        new: 'apFilePath'\n      }]\n    }\n  },\n  getSavedFileInfo: {\n    options: {\n      change: [{\n        old: 'filePath',\n        new: 'apFilePath'\n      }]\n    }\n  },\n  removeSavedFile: {\n    options: {\n      change: [{\n        old: 'filePath',\n        new: 'apFilePath'\n      }]\n    }\n  },\n  saveFile: {\n    options: {\n      change: [{\n        old: 'tempFilePath',\n        new: 'apFilePath'\n      }]\n    }\n  },\n  openLocation: {\n    options: {\n      set: [{\n        key: 'latitude',\n        value (options) {\n          return String(options.latitude)\n        }\n      }, {\n        key: 'longitude',\n        value (options) {\n          return String(options.longitude)\n        }\n      }]\n    }\n  },\n  uploadFile: {\n    options: {\n      change: [{\n        old: 'name',\n        new: 'fileName'\n      }]\n    }\n  },\n  getClipboardData: {\n    alias: 'getClipboard'\n  },\n  setClipboardData: {\n    alias: 'setClipboard',\n    options: {\n      change: [{\n        old: 'data',\n        new: 'text'\n      }]\n    }\n  },\n  makePhoneCall: {\n    options: {\n      change: [{\n        old: 'phoneNumber',\n        new: 'number'\n      }]\n    }\n  },\n  scanCode: {\n    alias: 'scan',\n    options: {\n      change: [{\n        old: 'onlyFromCamera',\n        new: 'hideAlbum'\n      }],\n      set: [{\n        key: 'type',\n        value (options) {\n          return (options.scanType && options.scanType[0].slice(0, -4)) || 'qr'\n        }\n      }]\n    }\n  },\n  setScreenBrightness: {\n    options: {\n      change: [{\n        old: 'value',\n        new: 'brightness'\n      }]\n    }\n  },\n  onBLEConnectionStateChange: {\n    alias: 'onBLEConnectionStateChanged'\n  },\n  offBLEConnectionStateChange: {\n    alias: 'offBLEConnectionStateChanged'\n  },\n  createBLEConnection: {\n    alias: 'connectBLEDevice'\n  },\n  closeBLEConnection: {\n    alias: 'disconnectBLEDevice'\n  }\n}\n/**\n * 抹平API返回值的差异\n * key 为 alipay小程序中的api名称\n */\nconst asyncResultApiDiff = {\n  getScreenBrightness: {\n    res: {\n      set: [\n        {\n          key: 'value',\n          value (res) {\n            return res.brightness\n          }\n        }\n      ],\n      remove: ['brightness']\n    }\n  },\n  scan: {\n    res: {\n      set: [\n        {\n          key: 'result',\n          value (res) {\n            return res.code\n          }\n        }\n      ]\n    }\n  },\n  getClipboard: {\n    res: {\n      set: [\n        {\n          key: 'data',\n          value (res) {\n            return res.text\n          }\n        }\n      ]\n    }\n  },\n  chooseImage: {\n    res: {\n      set: [\n        {\n          key: 'tempFilePaths',\n          value (res) {\n            return res.apFilePaths\n          }\n        }\n      ]\n    }\n  },\n  downloadFile: {\n    res: {\n      set: [\n        {\n          key: 'tempFilePath',\n          value (res) {\n            return res.apFilePath\n          }\n        }\n      ]\n    }\n  },\n  getAuthCode: {\n    res: {\n      set: [{\n        key: 'code',\n        value (res) {\n          return res.authCode\n        }\n      }]\n    }\n  },\n  getExtConfig: {\n    res: {\n      set: [{\n        key: 'extConfig',\n        value (res) {\n          return res.data\n        }\n      }]\n    }\n  },\n  saveFile: {\n    res: {\n      set: [\n        {\n          key: 'savedFilePath',\n          value (res) {\n            return res.apFilePath\n          }\n        }\n      ]\n    }\n  },\n  getBLEDeviceServices: {\n    res: {\n      set: [\n        {\n          key: 'services',\n          value (res) {\n            return res.services.map(item => {\n              return { uuid: item.serviceId, isPrimary: item.isPrimary }\n            })\n          }\n        }\n      ]\n    }\n  }\n}\n\nexport function request (options) {\n  options = options || {}\n  if (typeof options === 'string') {\n    options = {\n      url: options\n    }\n  }\n  const defaultHeaders = {\n    'content-type': 'application/json'\n  }\n  options.headers = defaultHeaders\n  if (options.header) {\n    for (const k in options.header) {\n      const lowerK = k.toLocaleLowerCase()\n      options.headers[lowerK] = options.header[k]\n    }\n    delete options.header\n  }\n  const originSuccess = options.success\n  const originFail = options.fail\n  const originComplete = options.complete\n  let requestTask\n  const p: any = new Promise((resolve, reject) => {\n    options.success = res => {\n      res.statusCode = res.status\n      delete res.status\n      res.header = res.headers\n      delete res.headers\n      originSuccess && originSuccess(res)\n      resolve(res)\n    }\n    options.fail = res => {\n      originFail && originFail(res)\n      reject(res)\n    }\n\n    options.complete = res => {\n      originComplete && originComplete(res)\n    }\n    // 改为实时获取原生API，防止用户修改原生API后无法同步\n    const nativeRequest = my.canIUse('request') ? my.request : my.httpRequest\n    requestTask = nativeRequest(options)\n  })\n  p.abort = (cb) => {\n    cb && cb()\n    if (requestTask) {\n      requestTask.abort()\n    }\n    return p\n  }\n  return p\n}\n\nexport function handleSyncApis (key: string, global: Record<string, any>, args: any[]) {\n  if (key === 'getStorageSync') {\n    const arg1 = args[0]\n    if (arg1 != null) {\n      const res = global[key]({ key: arg1 })\n\n      // 支付宝小程序遗留bug：值可能在data或APDataStorage字段下\n      let data = null\n      if (res.hasOwnProperty('data')) {\n        data = res.data\n      } else if (res.hasOwnProperty('APDataStorage')) {\n        data = res.APDataStorage\n      }\n\n      return data === null ? '' : data\n    }\n    return console.error('getStorageSync 传入参数错误')\n  }\n  if (key === 'setStorageSync') {\n    const arg1 = args[0]\n    const arg2 = args[1]\n    if (arg1 != null) {\n      return global[key]({\n        key: arg1,\n        data: arg2\n      })\n    }\n    return console.error('setStorageSync 传入参数错误')\n  }\n  if (key === 'removeStorageSync') {\n    const arg1 = args[0]\n    if (arg1 != null) {\n      return global[key]({ key: arg1 })\n    }\n    return console.error('removeStorageSync 传入参数错误')\n  }\n  if (key === 'createSelectorQuery') {\n    const query = global[key]()\n    query.in = function () { return query }\n    return query\n  }\n  return global[key].apply(global, args)\n}\n\nexport function transformMeta (api: string, options: Record<string, any>) {\n  let apiAlias = api\n  if (api === 'showModal') {\n    options.cancelButtonText = options.cancelText || '取消'\n    options.confirmButtonText = options.confirmText || '确定'\n    apiAlias = 'confirm'\n    if (options.showCancel === false) {\n      options.buttonText = options.confirmText || '确定'\n      apiAlias = 'alert'\n    }\n  } else {\n    Object.keys(apiDiff).forEach(item => {\n      const apiItem = apiDiff[item]\n      if (api === item) {\n        if (apiItem.alias) {\n          apiAlias = apiItem.alias\n        }\n        if (apiItem.options) {\n          const change = apiItem.options.change\n          const set = apiItem.options.set\n          if (change) {\n            change.forEach(changeItem => {\n              options[changeItem.new] = options[changeItem.old]\n            })\n          }\n          if (set) {\n            set.forEach(setItem => {\n              options[setItem.key] = typeof setItem.value === 'function' ? setItem.value(options) : setItem.value\n            })\n          }\n        }\n      }\n    })\n  }\n\n  return {\n    key: apiAlias,\n    options\n  }\n}\n\nexport function modifyApis (apis: Set<string>) {\n  Object.keys(apiDiff).map(key => {\n    apis.add(key)\n    const platformKey = apiDiff[key].alias\n    platformKey && apis.delete(platformKey)\n  })\n  apis.add('showModal')\n  apis.delete('confirm')\n  apis.delete('alert')\n}\n\nexport function modifyAsyncResult (key: string, res) {\n  if (key === 'connectSocket') {\n    res.onClose = function (cb) {\n      my.onSocketClose(cb)\n    }\n\n    res.onError = function (cb) {\n      my.onSocketError(cb)\n    }\n\n    res.onMessage = function (cb) {\n      my.onSocketMessage(cb)\n    }\n\n    res.onOpen = function (cb) {\n      my.onSocketOpen(cb)\n    }\n\n    res.send = function (opt) {\n      my.sendSocketMessage(opt)\n    }\n\n    res.close = function () {\n      my.closeSocket()\n    }\n  }\n\n  Object.keys(asyncResultApiDiff).forEach(apiKey => {\n    const apiItem = asyncResultApiDiff[apiKey]\n    if (key !== apiKey) {\n      return\n    }\n    if (!apiItem.res) {\n      return\n    }\n\n    const set = apiItem.res.set\n    const remove = apiItem.res.remove\n\n    if (set) {\n      set.forEach(setItem => {\n        res[setItem.key] = typeof setItem.value === 'function' ? setItem.value(res) : setItem.value\n      })\n    }\n\n    if (remove) {\n      remove.forEach(removeItem => {\n        delete res[removeItem]\n      })\n    }\n  })\n}\n\nexport function initNativeApi (taro) {\n  processApis(taro, my, {\n    needPromiseApis,\n    handleSyncApis,\n    transformMeta,\n    modifyApis,\n    modifyAsyncResult,\n    request\n  })\n}\n","import { singleQuote } from '@tarojs/shared'\n\nexport const components = {\n  // ======== 调整属性 ========\n  View: {\n    'disable-scroll': 'false',\n    hidden: 'false',\n    bindAppear: '',\n    bindDisappear: '',\n    bindFirstAppear: ''\n  },\n  Text: {\n    'number-of-lines': ''\n  },\n  Map: {\n    skew: '0',\n    rotate: '0',\n    polygons: '[]',\n    'include-padding': '',\n    'ground-overlays': '[]',\n    'tile-overlay': '',\n    'custom-map-style': '',\n    panels: '[]',\n    setting: '{}',\n    optimize: 'false',\n    'show-compass': 'false',\n    'show-scale': 'false',\n    'enable-overlooking': 'false',\n    'enable-zoom': 'true',\n    'enable-scroll': 'true',\n    'enable-rotate': 'false',\n    'enable-traffic': 'false',\n    'enable-poi': 'true',\n    'enable-building': 'true',\n    'enable-satellite': 'false',\n    bindRegionChange: '',\n    bindPanelTap: '',\n    bindInitComplete: ''\n  },\n  Button: {\n    scope: '',\n    'public-id': '',\n    bindGetAuthorize: '',\n    bindError: '',\n    bindGetUserInfo: '',\n    bindGetPhoneNumber: '',\n    bindFollowLifestyle: ''\n  },\n  Checkbox: {\n    bindChange: ''\n  },\n  Input: {\n    'always-system':'false',\n    'random-number': 'false',\n    controlled: 'false',\n    enableNative: 'true',\n    name:''\n  },\n  Slider: {\n    'track-size': '4',\n    'handle-size': '22',\n    'handle-color': singleQuote('#ffffff')\n  },\n  Switch: {\n    controlled: 'false'\n  },\n  Textarea: {\n    'show-count': 'true',\n    controlled: 'false',\n    enableNative: 'false'\n  },\n  MovableView: {\n    bindChangeEnd: ''\n  },\n  ScrollView: {\n    'scroll-animation-duration': '',\n    'trap-scroll': 'false'\n  },\n  Swiper: {\n    'active-class': '',\n    'changing-class': '',\n    acceleration: 'false',\n    'disable-programmatic-animation': 'false',\n    'disable-touch': 'false',\n    bindAnimationEnd: ''\n  },\n  Image: {\n    'default-source': ''\n  },\n  Camera: {\n    mode: singleQuote('normal'),\n    'output-dimension': singleQuote('720P'),\n    'frame-size': singleQuote('medium'),\n    bindScanCode: '',\n    bindReady: '',\n  },\n  Canvas: {\n    type: '',\n    width: singleQuote('300px'),\n    height: singleQuote('225px'),\n    bindReady: ''\n  },\n  Video: {\n    'poster-size': singleQuote('contain'),\n    'mobilenet-hint-type': '1',\n    enableNative: 'true',\n    bindLoading: '',\n    bindUserAction: '',\n    bindStop: '',\n    bindRenderStart: ''\n  },\n  // ======== 额外组件 ========\n  Lottie: {\n    autoplay: 'false',\n    path: '',\n    speed: '1.0',\n    'repeat-count': '0',\n    'auto-reverse': 'false',\n    'assets-path': '',\n    placeholder: '',\n    djangoId: '',\n    md5: '',\n    optimize: 'false',\n    bindDataReady: '',\n    bindDataFailed: '',\n    bindAnimationStart: '',\n    bindAnimationEnd: '',\n    bindAnimationRepeat: '',\n    bindAnimationCancel: '',\n    bindDataLoadReady: ''\n  },\n  Lifestyle: {\n    'public-id': '',\n    memo: '',\n    bindFollow: ''\n  },\n  LifeFollow: {\n    sceneId: '',\n    checkFollow: '',\n    bindCheckFollow: '',\n    bindClose: ''\n  },\n  ContactButton: {\n    'tnt-inst-id': '',\n    scene: '',\n    size: '25',\n    color: singleQuote('#00A3FF'),\n    icon: '',\n    'alipay-card-no': '',\n    'ext-info': ''\n  },\n  ArCamera: {\n    devicePosition: singleQuote('back'),\n    marker: '',\n    mode: singleQuote('imageTracking'),\n    useCapturedImage: 'false',\n    bindInit: '',\n    bindStop: '',\n    bindError: '',\n    bindARFrame: ''\n  },\n  PageContainer: {\n    show: 'false',\n    duration: '300',\n    'z-index': '100',\n    overlay: 'true',\n    position: singleQuote('bottom'),\n    round: 'false',\n    'close-on-slide-down': 'false',\n    'overlay-style': '',\n    'custom-style': '',\n    bindBeforeEnter: '',\n    bindEnter: '',\n    bindEnterCancelled: '',\n    bindAfterEnter: '',\n    bindBeforeLeave: '',\n    bindLeave: '',\n    bindLeaveCancelled: '',\n    bindAfterLeave: '',\n    bindClickOverlay: '',\n  },\n  ShareElement: {\n    name: '',\n    transform: 'false',\n    duration: '300',\n    'easing-function': singleQuote('ease-out'),\n  },\n}\n","\nimport {\n  handleSyncApis,\n  initNativeApi,\n  modifyApis,\n  modifyAsyncResult,\n  request,\n  transformMeta\n} from './apis'\n\ndeclare const my: any\n\nconst BUBBLE_EVENTS = new Set([\n  'touchStart',\n  'touchMove',\n  'touchEnd',\n  'touchCancel',\n  'tap',\n  'longTap'\n])\n\nexport {\n  handleSyncApis,\n  initNativeApi,\n  modifyApis,\n  modifyAsyncResult,\n  request,\n  transformMeta\n}\nexport * from './apis-list'\nexport * from './components'\nexport const hostConfig = {\n  initNativeApi,\n  getMiniLifecycle (config) {\n    config.component[0] = 'didMount'\n    config.component[1] = 'didUnmount'\n    return config\n  },\n  getEventCenter (Events) {\n    if (!my.taroEventCenter) {\n      my.taroEventCenter = new Events()\n    }\n    return my.taroEventCenter\n  },\n  modifyTaroEvent (event, node) {\n    if (node.tagName === 'SWIPER' && event.type === 'animationend') {\n      event.type = 'animationfinish'\n    }\n  },\n  isBubbleEvents (eventName) {\n    return BUBBLE_EVENTS.has(eventName)\n  }\n}\n","import { mergeInternalComponents, mergeReconciler } from '@tarojs/shared'\n\nimport { components, hostConfig } from './runtime-utils'\n\n// 支付宝真机只有 navigator.swuserAgent\nconst { userAgent } = navigator\nObject.defineProperty(navigator, 'userAgent', {\n  configurable: true,\n  enumerable: true,\n  get () {\n    return userAgent || (navigator as any).swuserAgent || ''\n  }\n})\n\nmergeReconciler(hostConfig)\nmergeInternalComponents(components)\n"],"names":[],"sourceRoot":""}